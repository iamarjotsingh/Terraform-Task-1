name: Install Package on Azure Windows VM
on:
  push:
    branches:
      - main

jobs:
  install-package:
    runs-on: windows-latest

    steps:
      - name: Set up Azure PowerShell
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Package on Azure VM
        run: |
          # Authenticate to Azure
          $azContext = Connect-AzAccount -Credential ${{ secrets.AZURE_CREDENTIALS }}

          # Get the VM object
          $resourceGroupName = 'terrform-amar-rg1'
          $vmName = 'tf-vm'
          $vm = Get-AzVM -ResourceGroupName $resourceGroupName -Name $vmName

          # Install the package using PowerShell remoting
          $installScript = {
            $packageName = 'git'
            $packageArgs = '/q'  # Specify any additional arguments for package installation
            Start-Process -FilePath 'choco' -ArgumentList "install $packageName $packageArgs" -Wait
          }
          Invoke-AzVMRunCommand -ResourceGroupName $resourceGroupName -VMName $vmName -CommandId 'RunPowerShellScript' -ScriptPath $installScript









# name: Install Package on Azure VM
# on:
#   push:
#     branches:
#       - main

# jobs:
#   install-package:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Set up Azure CLI
#         uses: azure/login@v1
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}

#       - name: Install Package on Azure VM
#         run: |
#           az vm extension set \
#             --resource-group terrform-amar-rg1 \
#             --vm-name tf-vm \
#             --name CustomScript \
#             --publisher Microsoft.Azure.Extensions \
#             --version 2.0 \
#             --settings '{"commandToExecute":"apt-get update && apt-get install -y "}'














# # name: Run Azure VM Command
# # on:
# #   push:
# #     branches:
# #       - main

# # jobs:
# #   run-command:
# #     runs-on: ubuntu-latest

# #     steps:
# #       - name: Set up Azure PowerShell
# #         uses: azure/login@v1
# #         with:
# #           creds: ${{ secrets.AZURE_CREDENTIALS }}

# #       - name: Run Command on Azure VM
# #         shell: pwsh
# #         run: |
          
# #           pwsh -Command "Install-Module -Name Az -AllowClobber -Scope CurrentUser -Force"
# #           pwsh -Command "Import-Module -Name Az"
# #           # Run the command on Azure VM
# #           Invoke-AzVMRunCommand -ResourceGroupName 'terrform-amar-rg1' -Name 'tf-vm' -CommandId 'RunPowerShellScript' -ScriptPath './scripts/script2.ps1' 











# # # name: 'Intall Package in VM'

# # # on:
# # #   workflow_dispatch:
    
# # # jobs:
# # #    pakage_install:
# # #     name: 'pkg_in_vm'
# # #     runs-on: ubuntu-latest
# # #     environment: production

# # #     steps:
    
    

# # #     - name: Checkout
# # #       uses: actions/checkout@v3

# # #     - name: Login Azure
# # #       uses: azure/login@v1
# # #       with:
# # #         creds: ${{secrets.AZURE_CREDENTIALS}}
# # #         enable-AzPSSession: true 

    
# # #     - name: pkg install
# # #       uses: azure/powershell@v1
# # #       with:
# # #        inlineScript: |
# # #           # Your PowerShell script commands here
# # #           #pwsh -File ./scripts/script2.ps1
# # #           # pwsh -Command "Install-Module -Name Az -Force -AllowClobber -Scope AllUsers"
# # #           # pwsh -Command "Import-Module -Name Az"
# # #           pwsh -Command "Invoke-AzVMRunCommand -ResourceGroupName 'terrform-amar-rg1' -Name 'tf-vm' -CommandId 'RunPowerShellScript' -ScriptPath './scripts/script2.ps1' "      #     $output = Invoke-Expression -Command "pwsh -File ./scripts/script2.ps1"
# # #       #     $output | Export-Csv -Path output.csv -NoTypeInformation -Encoding UTF8 #-QuoteFields All
# # #        azPSVersion: "latest"


# # #     # - name: Upload CSV artifact
# # #     #   uses: actions/upload-artifact@v2
# # #     #   with:
# # #     #     name: script-output
# # #     #     path: output.csv


