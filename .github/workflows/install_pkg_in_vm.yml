name: Install Docker on Azure Linux VM
on:
  workflow_dispatch:

jobs:
  install-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.2
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install Docker on Azure VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo apt-get update
            sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
            sudo apt-get update
            sudo apt-get install -y docker-ce
            docker version
















# name: Install Package on Azure Windows VM
# on:
#   push:
#     branches:
#       - main

# jobs:
#   install-package:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Set up Azure PowerShell
#         uses: azure/login@v1
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}
#           enable-AzPSSession: true 

#       - name: Install Package on Azure VM
#         run: |
#           # Authenticate to Azure
#           $azContext = Connect-AzAccount -Credential ${{ secrets.AZURE_CREDENTIALS }}

#           # Get the VM object
#           $resourceGroupName = 'terrform-amar-rg1'
#           $vmName = 'tf-vm'
#           $vm = Get-AzVM -ResourceGroupName $resourceGroupName -Name $vmName

#           # Install the package using PowerShell remoting
#           $installScript = {
#             $packageName = 'git'
#             $packageArgs = '/q'  # Specify any additional arguments for package installation
#             Start-Process -FilePath 'choco' -ArgumentList "install $packageName $packageArgs" -Wait
#           }
#           Invoke-AzVMRunCommand -ResourceGroupName $resourceGroupName -VMName $vmName -CommandId 'RunPowerShellScript' -ScriptPath $installScript









# name: Install Package on Azure VM
# on:
#   push:
#     branches:
#       - main

# jobs:
#   install-package:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Set up Azure CLI
#         uses: azure/login@v1
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}

#       - name: Install Package on Azure VM
#         run: |
#           az vm extension set \
#             --resource-group terrform-amar-rg1 \
#             --vm-name tf-vm \
#             --name CustomScript \
#             --publisher Microsoft.Azure.Extensions \
#             --version 2.0 \
#             --settings '{"commandToExecute":"apt-get update && apt-get install -y "}'














# # name: Run Azure VM Command
# # on:
# #   push:
# #     branches:
# #       - main

# # jobs:
# #   run-command:
# #     runs-on: ubuntu-latest

# #     steps:
# #       - name: Set up Azure PowerShell
# #         uses: azure/login@v1
# #         with:
# #           creds: ${{ secrets.AZURE_CREDENTIALS }}

# #       - name: Run Command on Azure VM
# #         shell: pwsh
# #         run: |
          
# #           pwsh -Command "Install-Module -Name Az -AllowClobber -Scope CurrentUser -Force"
# #           pwsh -Command "Import-Module -Name Az"
# #           # Run the command on Azure VM
# #           Invoke-AzVMRunCommand -ResourceGroupName 'terrform-amar-rg1' -Name 'tf-vm' -CommandId 'RunPowerShellScript' -ScriptPath './scripts/script2.ps1' 











# name: 'Intall Package in VM'

# on:
#   workflow_dispatch:
    
# jobs:
#    pakage_install:
#     name: 'pkg_in_vm'
#     runs-on: ubuntu-latest
#     environment: production

#     steps:
    
    

#     - name: Checkout
#       uses: actions/checkout@v3

#     - name: Login Azure
#       uses: azure/login@v1
#       with:
#         creds: ${{secrets.AZURE_CREDENTIALS}}
#         enable-AzPSSession: true 

#     - name: install package
#       run: apt-get -y install 
    
    # - name: pkg install
    #   uses: azure/powershell@v1
    #   with:
    #    inlineScript: |
        

    #      Invoke-AzVMRunCommand -ResourceGroupName 'terrform-amar-rg1' -VMName 'tf-vm' -CommandId 'RunPowerShellScript' -ScriptPath './scripts/script2.ps1'
    #    azPSVersion: "latest"


# # #     # - name: Upload CSV artifact
# # #     #   uses: actions/upload-artifact@v2
# # #     #   with:
# # #     #     name: script-output
# # #     #     path: output.csv


